// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ORGANIZER
  ATTENDEE
  ADMIN
}

enum Category{
  CONFERENCE
  WORKSHOP
  MEETUP
  WEBINAR
}

enum status{
  REGISTERED
  CANCELLED
}

model User {
  id            String  @id @default(cuid())
  name          String
  email         String  @unique
  password      String
  role          Role    @default(ATTENDEE)
  organization  String  @default("NOT APPLICABLE")
  isVerified    Boolean @default(false)
  isPasswordSet Boolean @default(true)

  events Event[]
  registration Registration[]
}

model Requests {
  id           String  @id @default(cuid())
  name         String
  organization String
  email        String  @unique
  ContactNo    String  @unique
  purpose      String
  isVerified   Boolean @default(false)
}

model Otp {
  id         String   @id @default(cuid())
  otp        String   @unique
  email      String   @unique
  isVerified Boolean  @default(false)
  createdAt  DateTime @default(now())
  expiresAt  DateTime
}

model Event{
  id String @id @default(cuid())
  title String
  description String
  category Category @default(CONFERENCE)
  date DateTime 
  availableSeats Int @default(100)
  organizerId String
  isCanceled Boolean @default(false)

  organizer User @relation(fields: [organizerId], references: [id], onDelete: Cascade)
  registrations Registration[]
}

model Registration{
  id String @id @default(cuid())
  userId String
  eventId String
  status status @default(REGISTERED)
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  @@unique([userId, eventId])
}
